@using TMSBilling.Models.ViewModels

@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewData["Title"] = "Change Password";
}

@model ChangePasswordViewModel

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">Change Password</h4>
                </div>
                <div class="card-body">
                    @if (ViewBag.Message != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @ViewBag.Message
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (ViewBag.Error != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @ViewBag.Error
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <form asp-action="ChangePassword" method="post">
                        <div class="mb-3">
                            <label asp-for="CurrentPassword" class="form-label">Current Password</label>
                            <input asp-for="CurrentPassword" type="password" class="form-control" placeholder="Enter your current password" required>
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label">New Password</label>
                            <input asp-for="NewPassword" type="password" class="form-control" placeholder="Enter your new password" required>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                            <div class="form-text">Password must be at least 6 characters long.</div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
                            <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm your new password" required>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Change Password</button>
                            @* <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Cancel</a> *@
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Toggle password visibility
        function togglePassword(inputId, iconId) {
            const input = document.getElementById(inputId);
            const icon = document.getElementById(iconId);

            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                input.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }

        // Password strength indicator
        document.getElementById('NewPassword')?.addEventListener('input', function() {
            const password = this.value;
            const strengthDiv = document.getElementById('password-strength');

            if (!strengthDiv) return;

            let strength = 0;
            if (password.length >= 6) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;

            const strengthText = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            const strengthColors = ['danger', 'danger', 'warning', 'info', 'success'];

            strengthDiv.className = `text-${strengthColors[strength - 1]}`;
            strengthDiv.textContent = password.length > 0 ? `Password strength: ${strengthText[strength - 1]}` : '';
        });
    </script>
}