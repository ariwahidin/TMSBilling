@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewData["Title"] = "Import Data Price Sell";
}

@* <div class="d-flex align-items-center">
    <form id="uploadForm" enctype="multipart/form-data">
        <a href="/PriceSell/Index" class="btn btn-primary mb-3">Back</a>
        <a href="/PriceSell/DownloadTemplate" class="btn btn-secondary mb-3">Download Template Excel</a>
        <input type="file" name="file" id="excelFile" accept=".xlsx" class="form-control mb-3" />
        <button type="button" class="btn btn-primary" onclick="previewExcel()">Preview</button>
    </form>
</div> *@

<div class="d-flex align-items-center gap-2">
    <form id="uploadForm" enctype="multipart/form-data" class="d-flex align-items-center gap-2 flex-wrap">
        <a href="/PriceSell/Index" class="btn btn-primary">Back</a>
        <a href="/PriceSell/DownloadTemplate" class="btn btn-secondary">Download Template Excel</a>
        <input type="file" name="file" id="excelFile" accept=".xlsx" class="form-control" style="width:auto;">
        <button type="button" class="btn btn-primary" onclick="previewExcel()">Preview</button>
    </form>
    <div class="d-flex align-items-center">
        <select id="operationType" class="form-select me-3" style="width: 200px;">
            <option value="add">Add</option>
            <option value="edit">Edit</option>
        </select>
        <button class="btn btn-success" onclick="submitData()">Submit</button>
    </div>
</div>


<hr />

<h4>Preview Data</h4>
<p>Total rows : <span id="spanRows"></span></p>
<table class="table table-bordered nowrap" id="previewTable" style="font-size:12px;">
    <thead></thead>
    <tbody></tbody>
</table>



@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script>
        let parsedData = [];

        function fixExcelDate(value) {
            if (typeof value === "number") {
                const excelEpoch = new Date(1899, 11, 30);
                const dateObj = new Date(excelEpoch.getTime() + value * 86400000);
                return dateObj.toISOString().split("T")[0];
            } else if (typeof value === "string") {
                const parsed = new Date(value);
                return isNaN(parsed) ? "" : parsed.toISOString().split("T")[0];
            }
            return "";
        }

        function previewExcel() {
            const fileInput = document.getElementById('excelFile');
            const file = fileInput.files[0];

            if (!file) return alert("Pilih file Excel terlebih dahulu!");

            const reader = new FileReader();
            reader.onload = function (e) {
                const data = new Uint8Array(e.target.result);
                const workbook = XLSX.read(data, { type: 'array' });
                const sheetName = workbook.SheetNames[0];
                const sheet = workbook.Sheets[sheetName];
                const json = XLSX.utils.sheet_to_json(sheet, { defval: "" });

                parsedData = json.map(row => {
                    const {
                        cust_code, origin, dest, serv_type, serv_moda,
                        truck_size, charge_uom, flag_min, charge_min,
                        flag_range, min_range, max_range,
                        sell1, sell2, sell3,
                        sell_ret_empty, sell_ret_cargo, sell_ovnight, sell_cancel,
                        selltrip2, selltrip3, sell_diff_area,
                        valid_date, active_flag, curr, rate_value
                    } = row;

                    return {
                        cust_code, origin, dest, serv_type, serv_moda,
                        truck_size, charge_uom, flag_min, charge_min,
                        flag_range, min_range, max_range,
                        sell1, sell2, sell3,
                        sell_ret_empty, sell_ret_cargo, sell_ovnight, sell_cancel,
                        selltrip2, selltrip3, sell_diff_area,
                        valid_date: fixExcelDate(valid_date),
                        active_flag, curr, rate_value
                    };
                });

                renderTable(parsedData);
            };
            reader.readAsArrayBuffer(file);
        }

        function renderTable(data) {
            const table = document.getElementById('previewTable');
            const thead = table.querySelector('thead');
            const tbody = table.querySelector('tbody');

            thead.innerHTML = "";
            tbody.innerHTML = "";

            if (data.length === 0) return;

            const headers = Object.keys(data[0]);
            const headerRow = `<tr>${headers.map(h => `<th>${h}</th>`).join('')}</tr>`;
            thead.innerHTML = headerRow;

            data.forEach(item => {
                const row = `<tr>${headers.map(h => `<td style="min-width:120px;">${item[h]}</td>`).join('')}</tr>`;
                tbody.innerHTML += row;
            });

            document.getElementById("spanRows").innerText = data.length;
        }

        function submitData() {
            if (parsedData.length === 0) return showToast('Preview the data beforehand', 'error');;

            const op = document.getElementById('operationType').value;

            fetch('/PriceSell/UploadExcel', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ mode: op, data: parsedData })
            })
            .then(res => res.json())
            .then(result => {
                // if (result.errors) {
                //     showToast(result.errors, 'error');
                //     return;
                // }

            if (result.errors) {
            const errorMessages = JSON.stringify(result.errors)
                .replace(/[{"}\[\]]/g, '') // buang kurung & tanda kutip
                .replace(/,/g, '\n');      // ganti koma jadi newline

            showToast(errorMessages, 'error');
            return;
        }
                showToast(result.message, 'success');
                setTimeout(() => {
                    window.location.href = '/PriceSell/Index';
                }, 1000);
            })
            .catch(err => {
                console.error(err);
                alert("Gagal upload data.");
            });
        }
    </script>
}
