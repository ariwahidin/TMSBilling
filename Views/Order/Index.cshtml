@model IEnumerable<TMSBilling.Controllers.OrderSummaryViewModel>
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewData["Title"] = "Order List";
}

@* <h2>Order List</h2> *@
<div class="mb-3">
    <a href="/Order/Form" class="btn btn-primary btn-sm">
        <i class="bi bi-plus"></i> Create New Order
    </a>
    <a href="/Order/Import" class="btn btn-success btn-sm">
        <i class="bi bi-upload me-2"></i> Import New Order
    </a>
</div>

<table class="table table-bordered table-hover table-striped" id="tableOrder">
    <thead class="table-light">
        <tr>
            <th>#</th>
            <th>WH Code</th>
            <th>Customer</th>
            <th>Cnee</th>
            <th>Invoice No</th>
            <th>Delivery Date</th>
            <th>Origin </th>
            <th>Destination </th>
            <th>Status</th>
            <th>Item</th>
            <th>Qty</th>
            <th class="text-center">Action</th>
        </tr>
    </thead>
    <tbody>
        @{
            var i = 1;
            foreach (var item in Model)
            {
                <tr>
                    <td>@i</td>
                    <td>@item.WhCode</td>
                    <td>@item.SubCustId</td>
                    <td>@item.CneeCode</td>
                    <td>@item.InvNo</td>
                    <td>@item.DeliveryDate.ToString("yyyy-MM-dd")</td>
                    <td>@item.OriginId</td>
                    <td>@item.DestArea</td>
                    <td>@(item.OrderStatus == 1 ? "confirmed" : "draft")</td>
                    <td>@item.TotalItem</td>
                    <td>@item.TotalQty</td>
                    <td class="text-center">

                        <button class="btn btn-light btn-sm" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-three-dots-vertical"></i>
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <a href="/Order/Form/@item.IdSeq" class="dropdown-item">
                                    <i class="bi bi-pencil-square"></i> Edit
                                </a>
                            </li>

                            @if (@item.McEasyOrderId != null && @item.OrderStatus != 1)
                            {
                                <li>
                                    <a href="#" class="dropdown-item" onclick="confirmOrder(`@item.McEasyOrderId`)">
                                        <i class="bi bi-check-square"></i> Confirm
                                    </a>
                                </li>
                            }
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <a href="#" class="dropdown-item" onclick="confirmDelete(@item.IdSeq)">
                                    <i class="bi bi-trash"></i> Delete
                                </a>
                            </li>
                        </ul>

                        
                        
                    </td>
                </tr>
                i++;
            }
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function confirmDelete(id) {
            if (confirm('Are you sure you want to delete this order?')) {
                fetch(`/Order/Delete/${id}`, {
                    method: 'POST'
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message || 'Delete failed.');
                    }
                });
            }
        }

        // function confirmOrder(id) {
        //     if (confirm('Are you sure you want to confirm this order?')) {
        //         const url = `/Order/Confirm/${id}`;
        //         fetch(url, {
        //             method: 'POST'
        //         })
        //         .then(res => res.json())
        //         .then(data => {
        //             if (data.success) {
        //                 location.reload();
        //             } else {
        //                 alert(data.message || 'Confirm failed.');
        //             }
        //         });
        //     }
        // }

        function confirmOrder(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to confirm this order?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, confirm it!',
                cancelButtonText: 'Cancel',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    showLoading();
                    const url = `/Order/Confirm/${id}`;
                    fetch(url, { method: 'POST' })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                hideLoading();
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Confirmed!',
                                    text: 'The order has been confirmed.',
                                    timer: 1500,
                                    showConfirmButton: false
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                hideLoading();
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Failed',
                                    text: data.message || 'Confirm failed.'
                                });
                            }
                        })
                        .catch(() => {
                            hideLoading();
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Something went wrong while confirming.'
                            });
                        });
                }
            });
        }


        $(document).ready(() => {
            $('#tableOrder').DataTable({
                language: {
                    emptyTable: "No orders available"
                }
            });

            
        });
    </script>
}
