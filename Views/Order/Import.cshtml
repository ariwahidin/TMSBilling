@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewData["Title"] = "Import Excel Order";
}

<div class="container">
    <form id="uploadForm" enctype="multipart/form-data">
        <a href="/Order/Index" class="btn btn-sm btn-primary mb-2"> <i class="bi bi-arrow-left"></i> Back</a>
        <input type="file" name="file" id="excelFile" accept=".xlsx" class="form-control mb-3" />
        <div class="">
            <a href="/Order/DownloadSample" class="btn btn-success btn-sm">Download Sample</a>
            <button type="submit" class="btn btn-primary btn-sm">Check Data</button>
        </div>
    </form>

    <hr />

    <div id="previewArea" style="display:none">

        <div class="text-end mt-3">
            <button class="btn btn-warning btn-sm" id="submitFinal"> <i class="bi bi-send me-1"></i> Submit</button>
        </div>

        <div class="mt-3">
            <h6>Raw JSON:</h6>
            <pre id="previewJson" style="background:#f8f9fa;padding:10px; border:1px solid #ccc;"></pre>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let parsedData;

        $("#uploadForm").on("submit", function (e) {
            e.preventDefault();
            const formData = new FormData(this);

            $.ajax({
                url: '/Order/Preview',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: res => {
                    parsedData = res;
                    $("#previewArea").show();
                    $("#previewJson").text(JSON.stringify(res, null, 2));
                    if (res.isValid === false) {
                        let html = "<ul>";
                        res.errors.forEach(e => {
                            html += `<li><strong>Row ${e.row} [${e.section}]</strong>: (${e.field}) ${e.message}</li>`;
                        });
                        html += "</ul>";
                        Swal.fire({
                            icon: 'error',
                            title: 'Data Invalid!',
                            html: html
                        });
                    }
                },
                error: err => {
                    Swal.fire("Error", "Gagal membaca file", "error");
                }
            });
        });

        $("#submitFinal").on("click", function () {

            // console.log(parsedData)
            // return;

            if(!parsedData.isValid){
                Swal.fire("Error", "Invalid Data!", "error");
                return;
            }

            if (!parsedData || parsedData.data.length === 0) {
                Swal.fire("Warning", "Data kosong, tidak bisa submit!", "warning");
                return;
            }

            $.ajax({
                url: '/Order/SaveExcel',
                type: 'POST',
                data: JSON.stringify(parsedData.data),
                contentType: 'application/json',
                success: function (res){
                    Swal.fire({
                      position: "top-end",
                      icon: "success",
                      title: "Your work has been saved",
                      showConfirmButton: false,
                      timer: 1500
                    }).then(function(){
                        window.location.href = '/Order/Index'
                    })
                },
                error: err => Swal.fire("Gagal", "Submit gagal", "error")
            });
        });

        function renderHeader(data) {
            const headers = data.map(x => x.header);
            const keys = Object.keys(headers[0] || {});
            $("#theadHeader").html(keys.map(k => `<th>${k}</th>`).join(''));
            $("#tbodyHeader").html(
                headers.map(h => `
                    <tr>${keys.map(k => `<td>${h[k] ?? ''}</td>`).join('')}</tr>
                `).join('')
            );
        }

        function renderDetail(data) {
            const details = data.flatMap(x => x.details || []);
            const keys = Object.keys(details[0] || {});
            $("#theadDetail").html(keys.map(k => `<th>${k}</th>`).join(''));
            $("#tbodyDetail").html(
                details.map(d => `
                    <tr>${keys.map(k => `<td>${d[k] ?? ''}</td>`).join('')}</tr>
                `).join('')
            );
        }
    </script>
}

